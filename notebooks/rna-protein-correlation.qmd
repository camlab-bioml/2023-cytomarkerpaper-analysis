---
title: "RNA protein correlation analysis"
format: html
---


```{r}
suppressPackageStartupMessages({
  library(tidyverse)
  library(SingleCellExperiment)
  library(readxl)
  library(Nebulosa)
  library(ComplexHeatmap)
  library(here)
  library(singleCellTK)
  library(ggrepel)
  library(ggpubr)
  library(zellkonverter)
  library(stringr)
  library(glue)
  library(scran)
  library(scater)
})
```

```{r}
set.seed(23452345)
```


Read in needed data:

```{r}
cluster_interpretation <- read_excel(here("data/cluster-interpretation-nov23.xlsx"))
cluster_interpretation$cluster <- as.factor(cluster_interpretation$cluster)

sce_rna <- readRDS(here("data/processed/sce_scrna.rds"))

sce_cytof <- readRDS(here("data/sce_screen_full.rds"))

sce_cytof$cell_type <- plyr::mapvalues(sce_cytof$predicted_label,
                                      cluster_interpretation$cluster,
                                      cluster_interpretation$label)

feature_mapping <- read_excel(here("data/aliasmatch_kieranreview-annots.xlsx"))

celltype_mapping <- read_excel(here("data/screen-scrna-celltype-match.xlsx"))

```



## Map genes between ab and sce

```{r}
feature_mapping <- mutate(feature_mapping, gene_symbol = case_when(
  !is.na(Corrected) ~ Corrected,
  Alias != "NA" ~ Alias,
  input_in_sce ~ Input
))

```


```{r}

dfsc <- colData(sce_cytof) |> 
  as.data.frame() |> 
         select(expression = Nd148Di,
                cluster = predicted_label,
         target) |> 
  as_tibble() |> 
  inner_join(cluster_interpretation)

dfsc <- filter(dfsc, !is.na(target))

dfsum <- group_by(dfsc, target, label) |> 
  summarize(expr_mean_cytof = mean(log1p(expression)),
            expr_sd_cytof = sd(log1p(expression))) |>
  # summarize(expr_mean_cytof = mean((expression)),
  #         expr_sd_cytof = sd((expression))) |> 
  ungroup() |> 
  dplyr::rename(cluster = label)
```




```{r}
feature_mapping <- filter(feature_mapping, !is.na(gene_symbol))
genealias_short <- dplyr::select(feature_mapping, Input, gene_symbol) |> 
  dplyr::rename(target = Input) 

df_cytof <- inner_join(genealias_short, dfsum, by = "target")

```

Now make sure we're only looking at genes we have in common between scrna and cytof:

```{r}
common_genes <- intersect(rownames(sce_rna), df_cytof$gene_symbol)
```

```{r}
df_cytof <- filter(df_cytof, gene_symbol %in% common_genes)
sce_rna <- sce_rna[common_genes,]
```


## Start by comparing mean expressions

```{r}
df_rna <- t(as.matrix(logcounts(sce_rna))) |> 
  as.data.frame() |> 
  mutate(cluster = sce_rna$major_cell_type) |> 
  gather(gene_symbol, expression_scrna, -cluster) |> 
  as_tibble()

df_rna_sum <- group_by(df_rna, cluster, gene_symbol) |> 
  summarize(expr_mean_scrna = mean(expression_scrna),
            expr_var_scrna = var(expression_scrna)) |> 
  ungroup()
```

```{r}
result_df <- df_both |> 
  group_by(cluster) |> 
  do(tidy(cor.test(.$expr_mean_cytof, .$expr_mean_scrna)))

labelled_df <- result_df |>
  mutate(label = sprintf("R=%.2f, p=%.2e", estimate, p.value)) |>
  select(cluster, label) |> 
  ungroup()
```

```{r}
df_both <- inner_join(df_rna_sum, df_cytof, by = c("cluster", "gene_symbol")) 

df_annot <- filter(df_both, expr_mean_cytof > 2.8, expr_mean_scrna > 1)

df_both |> 
  filter(expr_mean_scrna < 3.8) |> # This is so the p value labels look ok
  ggplot(aes(x = expr_mean_cytof, y = expr_mean_scrna)) +
  # geom_density2d(color = scales::muted('red')) +
  geom_point(alpha = 0.5) +
  facet_wrap(~ cluster, nrow = 1)+
  # scale_x_log10() +
  # scale_y_log10() +
    ggpubr::theme_pubr() +   
  labs(x = "Mean log expression antibody screen", y = "Mean expression scRNA") +
  theme(strip.background = element_rect(fill = "grey95")) +
  stat_density2d(color='#4682B4') +
  geom_smooth(color=scales::muted('red'), method="lm") +
    theme(legend.title = element_blank(), 
        legend.position = 'bottom',
        strip.background = element_rect(fill='white'),
        strip.text = element_text(face='bold')) +
  ylim(0, NA) +
  # geom_label_repel(data = filter(df_annot, gene_symbol != "B2M"), aes(label = gene_symbol), size=2.6) +
  geom_text(data = labelled_df, aes(label = label), x = 4, y = 4.2, size=3) +
  ylim(NA, 4.5)

```

```{r}
ggsave(here("figs/rna-protein-scatter.pdf"), width=8, height=3)
```

Collapse over cell types

```{r}
df_both |> 
  ggplot(aes(x = expr_mean_cytof, y = expr_mean_scrna)) +
  # geom_density2d(color = scales::muted('red')) +
  geom_point(alpha = 0.5) +
  # facet_wrap(~ cluster, nrow = 1, scales = "free_y")+
  scale_x_log10() +
  # scale_y_log10() +
    ggpubr::theme_pubr() +   
  labs(x = "Mean expression antibody screen", y = "Mean expression scRNA") +
  theme(strip.background = element_rect(fill = "grey95")) +
  stat_density2d(color='#4682B4') +
  geom_smooth(color=scales::muted('red')) +
    theme(legend.title = element_blank(), 
        legend.position = 'bottom',
        strip.background = element_rect(fill='white'),
        strip.text = element_text(face='bold')) +
  ylim(0, NA) +
  geom_label_repel(data = df_annot, aes(label = gene_symbol), size=2.6)
```

Turn this into boxplots

```{r}
df_both <- group_by(df_both, cluster) |> 
  mutate(antibody_quantile = cut(expr_mean_cytof, 10, labels = paste0(10*1:10, "%")))

ggplot(df_both, aes(x = antibody_quantile, y = expr_mean_scrna)) +
  geom_boxplot(outlier.size=1, fill='grey95') +
  facet_wrap(~ cluster, scales = "free_x", nrow=1) +
  ggpubr::theme_pubr() +   
  labs(x = "Antibody expression percentile", y = "Mean logcounts scRNA") +
  theme(strip.background = element_rect(fill = "grey95")) +
    theme(legend.title = element_blank(), 
        legend.position = 'bottom',
        strip.background = element_rect(fill='white'),
        strip.text = element_text(face='bold'),
        axis.text.x = element_text(size=5)) +
  ylim(0, 3)
```
```{r}
ggsave(here("figs/rna-protein-boxplot.pdf"), width=8, height=3)
```


What are the correlation values?

```{r}
df_both |> 
  group_by(cluster) |> 
  summarize(correlation = cor((expr_mean_scrna), (expr_mean_cytof), method="pearson"))
```

## Overlay with MS data

```{r}
## it's all NA after line 6070
df_nic <- read_excel(here("data/journal.pone.0276294.s006.xlsx"), sheet = "RNA-protein distribution", n_max=6070)
```

```{r}
df_nic <- dplyr::select(df_nic, ID, contains("rank")) |> 
  dplyr::rename(gene_symbol = ID) |> 
  gather(cell_type_modality, rank, -gene_symbol)
```

```{r}
df_nic <- separate(df_nic, cell_type_modality, c("ignore", "modality", "cell_type"), sep="_")
df_nic <- select(df_nic, -ignore)

# I don't know why there are duplicates here but let's run with it
df_nic <- group_by(df_nic, gene_symbol, modality, cell_type) |> 
  summarize(rank = median(rank)) |> 
  ungroup()

df_nic <- spread(df_nic, modality, rank)

df_nic <- group_by(df_nic, cell_type) |> 
  mutate(protein = rank(protein), RNA = rank(RNA)) # renormalize ranks
```

```{r}
df_nic <- group_by(df_nic, cell_type) |> 
  mutate(agree = 1 * ( (RNA > median(RNA) & protein > median(protein)) | (RNA < median(RNA) & protein < median(protein))))
```


```{r}
ggplot(df_nic, aes(x = protein, y = RNA)) +
  geom_point(aes(color = agree), alpha = 0.1) +
  facet_wrap(~ cell_type)
```
```{r}
df_nic_sum <- group_by(df_nic, gene_symbol) |> 
  mutate(agree_prop = mean(agree)) |> 
  ungroup()
```


```{r}
df_both2 <- inner_join(df_both, df_nic_sum) 

plt1 <- df_both2 |> 
  ggplot(aes(x = expr_mean_scrna, y = expr_mean_cytof)) +
  geom_point() +
  facet_wrap(~ cluster)+
  scale_x_log10() +
  scale_y_log10() +
    ggpubr::theme_pubclean() +   
  labs(x = "Mean expression scRNA", y = "Mean expression CyToF", subtitle  = "Using all markers in screen") +
  theme(strip.background = element_rect(fill = "grey95")) +
  geom_smooth(method="lm")

plt2 <- filter(df_both2, agree_prop == 1) |> 
  ggplot(aes(x = expr_mean_scrna, y = expr_mean_cytof)) +
  geom_point() +
  facet_wrap(~ cluster)+
  scale_x_log10() +
  scale_y_log10() +
    ggpubr::theme_pubclean() +   
  labs(x = "Mean expression scRNA", y = "Mean expression CyToF", subtitle = "Removing markers with low MS-RNA agreement") +
  theme(strip.background = element_rect(fill = "grey95")) +
  geom_smooth(method="lm")
```

```{r}
cowplot::plot_grid(plt1, plt2, ncol=1)
```


```{r}
ggsave(here("figs/mean_expression_comparison.pdf"), width=8, height=5)
```


```{r}
df_both2 |> 
  group_by(cluster) |> 
  summarize(correlation = cor(log1p(expr_mean_scrna), log1p(expr_mean_cytof), method="pearson"))
```

```{r}
df_both2 |> 
  filter(agree_prop  == 1) |> 
  group_by(cluster) |> 
  summarize(correlation = cor(log1p(expr_mean_scrna), log1p(expr_mean_cytof), method="pearson"))
```


## Turn this into a prediction problem setup

```{r}
thresh <- 0.5

dfscrna_bin <- ungroup(df_rna_sum) |> 
  group_by(cluster) |> 
  dplyr::mutate(is_high_scrna = 1 * (expr_mean_scrna > quantile(expr_mean_scrna, thresh))) |> 
  ungroup() |> 
  select(cluster, gene_symbol, is_high_scrna)

df_cytof_bin <- ungroup(df_cytof) |> 
  group_by(cluster) |> 
  dplyr::mutate(is_high_cytof = 1 * (expr_mean_cytof > quantile(expr_mean_cytof, thresh))) |> 
  ungroup()|> 
  select(cluster, gene_symbol, is_high_cytof)

df_bin <- inner_join(dfscrna_bin, df_cytof_bin)
```

Integrate this with whether they agree:

```{r}
agreeprops <- ungroup(df_both2) |> 
  select(gene_symbol, agree_prop) |> 
  distinct()

df_bin <- inner_join(df_bin, agreeprops) # agreeprop is how much do they agree from external
```


```{r}
library(caret)

get_sens_spec <- function(clusterm, filter_agreeprop = TRUE) {
  df_bin_tmp <- filter(df_bin, cluster == clusterm)
  if(filter_agreeprop) {
    df_bin_tmp <- filter(df_bin_tmp, agree_prop == 1)
  }
  conf_matrix <- confusionMatrix(data = factor(df_bin_tmp$is_high_scrna, levels=c(1,0)), reference=factor(df_bin_tmp$is_high_cytof, levels=c(1,0)))
  tibble(
    cluster = clusterm,
    value = c(conf_matrix$byClass['Sensitivity'], conf_matrix$byClass['Specificity'], conf_matrix$byClass['Pos Pred Value']),
    Metric = c("Sensitivity", "Specificity", "Pos. Pred. Value"),
    filter_agreeprop = filter_agreeprop
  )
}

df_senspec <- bind_rows(
  lapply(unique(dfscrna_bin$cluster), get_sens_spec, filter_agreeprop = TRUE) |> 
    bind_rows(),
  lapply(unique(dfscrna_bin$cluster), get_sens_spec, filter_agreeprop = FALSE) |> 
    bind_rows()
)
  
```

```{r}

df_senspec |> 
  # filter(Metric == "Pos. Pred. Value") |>
  mutate(filter_agreeprop_str = case_when(
    filter_agreeprop ~ "Removing markers\nwith low MS-RNA\nagreement",
    !filter_agreeprop ~ "Using all markers\nin screen"
  )) |> 
ggplot(aes(fill = filter_agreeprop_str, y = value, x = cluster)) +
  geom_bar(stat='identity', position = 'dodge') +
  ggpubr::theme_pubr() +
  labs(x = "Cell type", y = "Metric value") +
  scale_fill_brewer(palette = "Accent") +
  ylim(0, 1.1) +
  scale_y_continuous(breaks = seq(0, 1.0, by = 0.1)) +
    theme(legend.title = element_blank(), 
        legend.position = 'bottom',
        strip.background = element_rect(fill='white'),
        strip.text = element_text(face='bold')) +
  # guides(fill=guide_legend(ncol =1)) +
  facet_wrap(~ Metric) + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
```{r}
ggsave(here("figs/cytomarker_sens_spec.pdf"), width=8, height=5, scale = 0.75)
```

```{r}
df_senspec |> 
  # filter(Metric == "Pos. Pred. Value") |>
  mutate(filter_agreeprop_str = case_when(
    filter_agreeprop ~ "Keep markers with\nhigh MS-RNA\nagreement",
    !filter_agreeprop ~ "Using all markers\nin screen"
  )) |> 
ggplot(aes(fill = filter_agreeprop_str, y = value, x = cluster)) +
  geom_bar(stat='identity', position = 'dodge') +
  ggpubr::theme_pubr() +
  labs(x = "Cell type", y = "Metric value") +
  scale_fill_brewer(palette = "Accent") +
  ylim(0, 1.1) +
  scale_y_continuous(breaks = seq(0, 1.0, by = 0.4)) +
    theme(legend.title = element_blank(), 
        legend.position = 'bottom',
        strip.background = element_rect(fill='white')) +
  # guides(fill=guide_legend(ncol =1)) +
  facet_wrap(~ Metric, ncol=1) + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  guides(fill=guide_legend(ncol=1))
```
```{r}
ggsave(here("figs/cytomarker_sens_spec_crs.pdf"), width=4, height=9, scale = 0.5)
```


